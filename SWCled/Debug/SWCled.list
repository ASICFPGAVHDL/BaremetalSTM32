
SWCled.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f0  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000384  0800038c  0001038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000384  08000384  0001038c  2**0
                  CONTENTS
  4 .ARM          00000000  08000384  08000384  0001038c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000384  0800038c  0001038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000384  08000384  00010384  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000388  08000388  00010388  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800038c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800038c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001038c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000103bc  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000013d  00000000  00000000  000103ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000007e  00000000  00000000  0001053c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000105c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002d  00000000  00000000  00010608  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000fdc  00000000  00000000  00010635  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000513  00000000  00000000  00011611  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00003e42  00000000  00000000  00011b24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000058  00000000  00000000  00015968  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006d  00000000  00000000  000159c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800036c 	.word	0x0800036c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	0800036c 	.word	0x0800036c

080001d4 <main>:
#define		LED_PIN15				PIN15

/*
 * (1U << 10) set bit 10 to 1
 * & = not (1 << 11) set bit 11 to zero*/
int main(){
 80001d4:	b480      	push	{r7}
 80001d6:	b087      	sub	sp, #28
 80001d8:	af00      	add	r7, sp, #0
	/*Enable clock access to GPIOA*/
	RCC_AHB1EN_R |= GPIOAEN;
 80001da:	4b39      	ldr	r3, [pc, #228]	; (80002c0 <main+0xec>)
 80001dc:	681b      	ldr	r3, [r3, #0]
 80001de:	4a38      	ldr	r2, [pc, #224]	; (80002c0 <main+0xec>)
 80001e0:	f043 0301 	orr.w	r3, r3, #1
 80001e4:	6013      	str	r3, [r2, #0]
	/*Set PA5 as output pin*/
	GPIOA_MODE_R |= (21U << 26);
 80001e6:	4b37      	ldr	r3, [pc, #220]	; (80002c4 <main+0xf0>)
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	4a36      	ldr	r2, [pc, #216]	; (80002c4 <main+0xf0>)
 80001ec:	f043 43a8 	orr.w	r3, r3, #1409286144	; 0x54000000
 80001f0:	6013      	str	r3, [r2, #0]
	GPIOA_MODE_R &= 0x57FFFFFF;
 80001f2:	4b34      	ldr	r3, [pc, #208]	; (80002c4 <main+0xf0>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a33      	ldr	r2, [pc, #204]	; (80002c4 <main+0xf0>)
 80001f8:	f023 4328 	bic.w	r3, r3, #2818572288	; 0xa8000000
 80001fc:	6013      	str	r3, [r2, #0]
	while(1)
	{
		/*Toggle PA5*/
		/*GPIOA_MODE_R |= LED_PIN;*/

		GPIOA_ODR_R ^= LED_PIN13;
 80001fe:	4b32      	ldr	r3, [pc, #200]	; (80002c8 <main+0xf4>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	4a31      	ldr	r2, [pc, #196]	; (80002c8 <main+0xf4>)
 8000204:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8000208:	6013      	str	r3, [r2, #0]
		for(int i = 0; i<500000; i++){}
 800020a:	2300      	movs	r3, #0
 800020c:	617b      	str	r3, [r7, #20]
 800020e:	e002      	b.n	8000216 <main+0x42>
 8000210:	697b      	ldr	r3, [r7, #20]
 8000212:	3301      	adds	r3, #1
 8000214:	617b      	str	r3, [r7, #20]
 8000216:	697b      	ldr	r3, [r7, #20]
 8000218:	4a2c      	ldr	r2, [pc, #176]	; (80002cc <main+0xf8>)
 800021a:	4293      	cmp	r3, r2
 800021c:	ddf8      	ble.n	8000210 <main+0x3c>
		GPIOA_ODR_R ^= LED_PIN13;
 800021e:	4b2a      	ldr	r3, [pc, #168]	; (80002c8 <main+0xf4>)
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	4a29      	ldr	r2, [pc, #164]	; (80002c8 <main+0xf4>)
 8000224:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8000228:	6013      	str	r3, [r2, #0]
		for(int i = 0; i<500000; i++){}
 800022a:	2300      	movs	r3, #0
 800022c:	613b      	str	r3, [r7, #16]
 800022e:	e002      	b.n	8000236 <main+0x62>
 8000230:	693b      	ldr	r3, [r7, #16]
 8000232:	3301      	adds	r3, #1
 8000234:	613b      	str	r3, [r7, #16]
 8000236:	693b      	ldr	r3, [r7, #16]
 8000238:	4a24      	ldr	r2, [pc, #144]	; (80002cc <main+0xf8>)
 800023a:	4293      	cmp	r3, r2
 800023c:	ddf8      	ble.n	8000230 <main+0x5c>

		GPIOA_ODR_R ^= LED_PIN14;
 800023e:	4b22      	ldr	r3, [pc, #136]	; (80002c8 <main+0xf4>)
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	4a21      	ldr	r2, [pc, #132]	; (80002c8 <main+0xf4>)
 8000244:	f483 4380 	eor.w	r3, r3, #16384	; 0x4000
 8000248:	6013      	str	r3, [r2, #0]
		for(int i = 0; i<500000; i++){}
 800024a:	2300      	movs	r3, #0
 800024c:	60fb      	str	r3, [r7, #12]
 800024e:	e002      	b.n	8000256 <main+0x82>
 8000250:	68fb      	ldr	r3, [r7, #12]
 8000252:	3301      	adds	r3, #1
 8000254:	60fb      	str	r3, [r7, #12]
 8000256:	68fb      	ldr	r3, [r7, #12]
 8000258:	4a1c      	ldr	r2, [pc, #112]	; (80002cc <main+0xf8>)
 800025a:	4293      	cmp	r3, r2
 800025c:	ddf8      	ble.n	8000250 <main+0x7c>
		GPIOA_ODR_R ^= LED_PIN14;
 800025e:	4b1a      	ldr	r3, [pc, #104]	; (80002c8 <main+0xf4>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	4a19      	ldr	r2, [pc, #100]	; (80002c8 <main+0xf4>)
 8000264:	f483 4380 	eor.w	r3, r3, #16384	; 0x4000
 8000268:	6013      	str	r3, [r2, #0]
		for(int i = 0; i<500000; i++){}
 800026a:	2300      	movs	r3, #0
 800026c:	60bb      	str	r3, [r7, #8]
 800026e:	e002      	b.n	8000276 <main+0xa2>
 8000270:	68bb      	ldr	r3, [r7, #8]
 8000272:	3301      	adds	r3, #1
 8000274:	60bb      	str	r3, [r7, #8]
 8000276:	68bb      	ldr	r3, [r7, #8]
 8000278:	4a14      	ldr	r2, [pc, #80]	; (80002cc <main+0xf8>)
 800027a:	4293      	cmp	r3, r2
 800027c:	ddf8      	ble.n	8000270 <main+0x9c>

		GPIOA_ODR_R ^= LED_PIN15;
 800027e:	4b12      	ldr	r3, [pc, #72]	; (80002c8 <main+0xf4>)
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	4a11      	ldr	r2, [pc, #68]	; (80002c8 <main+0xf4>)
 8000284:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 8000288:	6013      	str	r3, [r2, #0]
		for(int i = 0; i<500000; i++){}
 800028a:	2300      	movs	r3, #0
 800028c:	607b      	str	r3, [r7, #4]
 800028e:	e002      	b.n	8000296 <main+0xc2>
 8000290:	687b      	ldr	r3, [r7, #4]
 8000292:	3301      	adds	r3, #1
 8000294:	607b      	str	r3, [r7, #4]
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a0c      	ldr	r2, [pc, #48]	; (80002cc <main+0xf8>)
 800029a:	4293      	cmp	r3, r2
 800029c:	ddf8      	ble.n	8000290 <main+0xbc>
		GPIOA_ODR_R ^= LED_PIN15;
 800029e:	4b0a      	ldr	r3, [pc, #40]	; (80002c8 <main+0xf4>)
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	4a09      	ldr	r2, [pc, #36]	; (80002c8 <main+0xf4>)
 80002a4:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80002a8:	6013      	str	r3, [r2, #0]
		for(int i = 0; i<500000; i++){}
 80002aa:	2300      	movs	r3, #0
 80002ac:	603b      	str	r3, [r7, #0]
 80002ae:	e002      	b.n	80002b6 <main+0xe2>
 80002b0:	683b      	ldr	r3, [r7, #0]
 80002b2:	3301      	adds	r3, #1
 80002b4:	603b      	str	r3, [r7, #0]
 80002b6:	683b      	ldr	r3, [r7, #0]
 80002b8:	4a04      	ldr	r2, [pc, #16]	; (80002cc <main+0xf8>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	ddf8      	ble.n	80002b0 <main+0xdc>
		GPIOA_ODR_R ^= LED_PIN13;
 80002be:	e79e      	b.n	80001fe <main+0x2a>
 80002c0:	40023830 	.word	0x40023830
 80002c4:	40020000 	.word	0x40020000
 80002c8:	40020014 	.word	0x40020014
 80002cc:	0007a11f 	.word	0x0007a11f

080002d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002d0:	480d      	ldr	r0, [pc, #52]	; (8000308 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002d2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002d8:	480c      	ldr	r0, [pc, #48]	; (800030c <LoopForever+0x6>)
  ldr r1, =_edata
 80002da:	490d      	ldr	r1, [pc, #52]	; (8000310 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002dc:	4a0d      	ldr	r2, [pc, #52]	; (8000314 <LoopForever+0xe>)
  movs r3, #0
 80002de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002e0:	e002      	b.n	80002e8 <LoopCopyDataInit>

080002e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002e6:	3304      	adds	r3, #4

080002e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002ec:	d3f9      	bcc.n	80002e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ee:	4a0a      	ldr	r2, [pc, #40]	; (8000318 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002f0:	4c0a      	ldr	r4, [pc, #40]	; (800031c <LoopForever+0x16>)
  movs r3, #0
 80002f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002f4:	e001      	b.n	80002fa <LoopFillZerobss>

080002f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002f8:	3204      	adds	r2, #4

080002fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002fc:	d3fb      	bcc.n	80002f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002fe:	f000 f811 	bl	8000324 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000302:	f7ff ff67 	bl	80001d4 <main>

08000306 <LoopForever>:

LoopForever:
  b LoopForever
 8000306:	e7fe      	b.n	8000306 <LoopForever>
  ldr   r0, =_estack
 8000308:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800030c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000310:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000314:	0800038c 	.word	0x0800038c
  ldr r2, =_sbss
 8000318:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800031c:	2000001c 	.word	0x2000001c

08000320 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000320:	e7fe      	b.n	8000320 <ADC_IRQHandler>
	...

08000324 <__libc_init_array>:
 8000324:	b570      	push	{r4, r5, r6, lr}
 8000326:	4d0d      	ldr	r5, [pc, #52]	; (800035c <__libc_init_array+0x38>)
 8000328:	4c0d      	ldr	r4, [pc, #52]	; (8000360 <__libc_init_array+0x3c>)
 800032a:	1b64      	subs	r4, r4, r5
 800032c:	10a4      	asrs	r4, r4, #2
 800032e:	2600      	movs	r6, #0
 8000330:	42a6      	cmp	r6, r4
 8000332:	d109      	bne.n	8000348 <__libc_init_array+0x24>
 8000334:	4d0b      	ldr	r5, [pc, #44]	; (8000364 <__libc_init_array+0x40>)
 8000336:	4c0c      	ldr	r4, [pc, #48]	; (8000368 <__libc_init_array+0x44>)
 8000338:	f000 f818 	bl	800036c <_init>
 800033c:	1b64      	subs	r4, r4, r5
 800033e:	10a4      	asrs	r4, r4, #2
 8000340:	2600      	movs	r6, #0
 8000342:	42a6      	cmp	r6, r4
 8000344:	d105      	bne.n	8000352 <__libc_init_array+0x2e>
 8000346:	bd70      	pop	{r4, r5, r6, pc}
 8000348:	f855 3b04 	ldr.w	r3, [r5], #4
 800034c:	4798      	blx	r3
 800034e:	3601      	adds	r6, #1
 8000350:	e7ee      	b.n	8000330 <__libc_init_array+0xc>
 8000352:	f855 3b04 	ldr.w	r3, [r5], #4
 8000356:	4798      	blx	r3
 8000358:	3601      	adds	r6, #1
 800035a:	e7f2      	b.n	8000342 <__libc_init_array+0x1e>
 800035c:	08000384 	.word	0x08000384
 8000360:	08000384 	.word	0x08000384
 8000364:	08000384 	.word	0x08000384
 8000368:	08000388 	.word	0x08000388

0800036c <_init>:
 800036c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036e:	bf00      	nop
 8000370:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000372:	bc08      	pop	{r3}
 8000374:	469e      	mov	lr, r3
 8000376:	4770      	bx	lr

08000378 <_fini>:
 8000378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037a:	bf00      	nop
 800037c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800037e:	bc08      	pop	{r3}
 8000380:	469e      	mov	lr, r3
 8000382:	4770      	bx	lr
